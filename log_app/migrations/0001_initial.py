# Generated by Django 3.1.9 on 2021-07-12 05:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import src.core_app.models
import src.customer.models
import src.item.models
import src.supplier.models
import src.user.models
import src.user_group.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core_app', '0001_initial'),
        ('sale', '0001_initial'),
        ('purchase', '0001_initial'),
        ('supplier', '0001_initial'),
        ('party_payment', '0001_initial'),
        ('customer', '0001_initial'),
        ('user_group', '0001_initial'),
        ('rims_setup', '0001_initial'),
        ('advance_deposit', '0001_initial'),
        ('item', '0001_initial'),
        ('customer_order', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogAdditionalChargeType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Additional Charge type name must be max 50 characters', max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical additional charge type',
                'db_table': 'core_app_additionalchargetype_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogAppAccessLog',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('device_type', models.PositiveBigIntegerField(choices=[(1, 'Mobile'), (2, 'PC'), (3, 'Tablet'), (4, 'Other')], default='NA', help_text='where 1=Mobile, 2=PC, 3=Tablet and 4=Other')),
                ('app_type', models.PositiveBigIntegerField(choices=[(1, 'Web-App'), (2, 'IOS-App'), (3, 'Android-App')], default='NA', help_text='where 1=Web-App, 2=IOS-APP, 3=Android-APP')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical app access log',
                'db_table': 'core_app_appaccesslog_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogBank',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical bank',
                'db_table': 'core_app_bank_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogBlock',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, max_length=20)),
                ('active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical block',
                'db_table': 'rims_setup_block_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogCountry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Name of the country can have max upto 50 characters, unique=True', max_length=50)),
                ('country_code', models.CharField(blank=True, help_text='country code max length 5', max_length=5, null=True)),
                ('phone_code', models.CharField(blank=True, help_text='country code max length 5', max_length=5, null=True)),
                ('currency_name', models.CharField(blank=True, help_text='country code max length 50', max_length=50, null=True)),
                ('currency_symbol', models.CharField(blank=True, help_text='country code max length 3', max_length=3, null=True)),
                ('currency_code', models.CharField(blank=True, help_text='country code max length 3', max_length=3, null=True)),
                ('flag_image', models.TextField(blank=True, help_text='Image can be max of 2 MB size, blank=True', max_length=100, validators=[src.core_app.models.validate_image])),
                ('active', models.BooleanField(default=True, help_text='By default= true')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical country',
                'db_table': 'core_app_country_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogDiscountScheme',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Discount scheme name must be max 50 characters', max_length=50)),
                ('editable', models.BooleanField(default=False)),
                ('rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount Rate default=0.00 max upto 100.00', max_digits=5)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical discount scheme',
                'db_table': 'core_app_discountscheme_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogItemCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('code', models.CharField(blank=True, db_index=True, help_text='Item code can be max. of 10 characters', max_length=10)),
                ('display_order', models.IntegerField(default=0, help_text='Display order for ordering, default=0')),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical item category',
                'db_table': 'item_itemcategory_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogOrganizationRule',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('customer_seq_type', models.PositiveIntegerField(choices=[(1, 'AD'), (2, 'BS'), (3, 'SEQUENTIAL')], default=2, help_text='where 1=AD,2=BS,3=SEQUENTIAL  and default=2')),
                ('fiscal_session_type', models.PositiveIntegerField(choices=[(1, 'AD'), (2, 'BS')], default=2, help_text='Where 1 = AD , 2 = BS and default=2')),
                ('calendar_system', models.PositiveIntegerField(choices=[(1, 'AD'), (2, 'BS')], default=2, help_text='Where 1 = AD , 2 = BS and default=2')),
                ('enable_print', models.BooleanField(default=True)),
                ('print_preview', models.BooleanField(default=True)),
                ('billing_time_restriction', models.BooleanField(default=False)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('first_day_of_week', models.PositiveIntegerField(choices=[(1, 'SUNDAY'), (2, 'MONDAY'), (3, 'TUESDAY'), (4, 'WEDNESDAY'), (5, 'THURSDAY'), (6, 'FRIDAY'), (7, 'SATURDAY')], default=1, help_text='where 1 = Sunday ---- 7 =Saturday')),
                ('tax_system', models.PositiveIntegerField(choices=[(1, 'VAT'), (2, 'PAN')], default=1, help_text='where 1=VAT, 2=PAN')),
                ('round_off_limit', models.PositiveIntegerField(default=2)),
                ('item_expiry_date_sale_threshold', models.PositiveIntegerField(default=30)),
                ('tax_applicable', models.BooleanField(default=True)),
                ('tax_rate', models.FloatField(default=0.0, help_text='Tax rate', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical organization rule',
                'db_table': 'core_app_organizationrule_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPaymentMode',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, max_length=15)),
                ('active', models.BooleanField(default=0)),
                ('remarks', models.CharField(blank=True, max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical payment mode',
                'db_table': 'core_app_paymentmode_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogProvince',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Province name can be max. of 50 characters and unique=True', max_length=50)),
                ('active', models.BooleanField(default=True, help_text='by default=True')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical province',
                'db_table': 'core_app_province_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogTaxGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Name can have max of 20 characaters and must be unique', max_length=20)),
                ('rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Default=0.0', max_digits=5)),
                ('display_order', models.IntegerField(default=0, help_text='Display order for ordering, default=0')),
                ('active', models.BooleanField(default=True, help_text='By default active=True')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical tax group',
                'db_table': 'core_app_taxgroup_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogUserGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(help_text='Name can have max of 50 characters', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='default value is True')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical user group',
                'db_table': 'user_group_customgroup_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogUserPermissionCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(help_text='Name can have max of 50 characters', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical user permission category',
                'db_table': 'user_group_permissioncategory_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='UserAccessLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('access_type', models.PositiveIntegerField(choices=[(1, 'LOGIN'), (2, 'LOGOUT')], help_text='1-LOGIN, 2-LOGOUT')),
                ('access_date_ad', models.DateTimeField(blank=True, null=True)),
                ('access_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('ipv4_address', models.CharField(blank=True, max_length=15)),
                ('ipv6_address', models.CharField(blank=True, max_length=39)),
                ('access_location', models.CharField(blank=True, max_length=100)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('browser_version', models.CharField(blank=True, max_length=50)),
                ('platform', models.CharField(blank=True, max_length=50)),
                ('mobile', models.BooleanField(blank=True, null=True)),
                ('robot', models.BooleanField(blank=True, null=True)),
                ('access_coordinate_la', models.CharField(blank=True, max_length=10)),
                ('access_coordinate_lo', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LogUserPermission',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(help_text='Name can have max of 50 characters', max_length=50)),
                ('code_name', models.CharField(help_text='Code Name can have max of 50 characters', max_length=50, validators=[src.user_group.models.validate_code_name])),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, help_text='foreign key to UserPermissionCategory', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user_group.userpermissioncategory')),
            ],
            options={
                'verbose_name': 'historical user permission',
                'db_table': 'user_group_custompermission_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(db_index=True, help_text='email should be unique with max length upto 150 characters', max_length=150)),
                ('user_name', models.CharField(db_index=True, help_text='user_name must be unique and max_length upto 50 characters', max_length=50)),
                ('first_name', models.CharField(blank=True, help_text='First name can have max_length upto 50 characters', max_length=50)),
                ('middle_name', models.CharField(blank=True, help_text='Middle name can have max_length upto 50 characters', max_length=50)),
                ('last_name', models.CharField(blank=True, help_text='Last name can have max_length upto 50 characters', max_length=50)),
                ('is_staff', models.BooleanField(default=False, help_text='By default=True')),
                ('is_active', models.BooleanField(default=True)),
                ('gender', models.PositiveIntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Other')], default=1, help_text='where 1=male, 2=Female and 3=Other, default=1')),
                ('birth_date', models.DateField(blank=True, help_text='Blank=True and null=True', null=True)),
                ('address', models.TextField(blank=True, help_text='Address should be maximum of 50 characters', max_length=50)),
                ('mobile_no', models.CharField(blank=True, help_text='Mobile no. should be maximum of 15 characters', max_length=15)),
                ('photo', models.TextField(blank=True, max_length=100, validators=[src.user.models.validate_image])),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user_group.usergroup')),
            ],
            options={
                'verbose_name': 'historical user',
                'db_table': 'user_user_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogTable',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(max_length=20)),
                ('capacity', models.IntegerField()),
                ('no_of_attendant', models.IntegerField(blank=True, default=0)),
                ('status', models.PositiveIntegerField(choices=[(1, 'OCCUPIED'), (2, 'VACANT'), (3, 'RESERVED')], default=2, help_text='Where 1= OCCUPIED, 2 = VACANT, 3 = RESERVED')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('block', models.ForeignKey(blank=True, db_constraint=False, help_text='ForeignKey', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rims_setup.block')),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer.customer')),
            ],
            options={
                'verbose_name': 'historical table',
                'db_table': 'rims_setup_table_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSupplier',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(help_text='First name can be max. of 40 characters', max_length=40)),
                ('middle_name', models.CharField(blank=True, help_text='Middle can can be max. of 40 characters, blank=True', max_length=40)),
                ('last_name', models.CharField(help_text='Last name can be max. of 40 characters', max_length=40)),
                ('address', models.CharField(help_text='Address can be max. of 50 characters', max_length=50)),
                ('phone_no', models.CharField(blank=True, help_text='Phone no. can be max. of 15 characters, blank=True', max_length=15)),
                ('mobile_no', models.CharField(blank=True, help_text='Mobile no. can be max. of 15 characters, blank=True', max_length=15)),
                ('email_id', models.CharField(blank=True, help_text='Email Id can be max. of 50 characters, blank=True', max_length=50)),
                ('tax_reg_system', models.PositiveIntegerField(choices=[(1, 'VAT'), (2, 'PAN')], default=1, help_text='by default=1')),
                ('pan_vat_no', models.CharField(blank=True, help_text='PAN can be max. of 15 characters, blank=True', max_length=9)),
                ('image', models.TextField(blank=True, help_text='max image size can be 2 MB', max_length=100, null=True, validators=[src.supplier.models.validate_image])),
                ('active', models.BooleanField(default=True, help_text='by default active=True')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.country')),
            ],
            options={
                'verbose_name': 'historical supplier',
                'db_table': 'supplier_supplier_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSalePrintLog',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('sale_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
            ],
            options={
                'verbose_name': 'historical sale print log',
                'db_table': 'core_app_saleprintlog_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSalePaymentDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount can have max value upto=9999999999.99 and min_value=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks can have max upto 50 characaters and blank=True', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('payment_mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.paymentmode')),
                ('sale_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
            ],
            options={
                'verbose_name': 'historical sale payment detail',
                'db_table': 'sale_salepaymentdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSaleMain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('sale_no', models.CharField(db_index=True, help_text='Sale no. should be max. of 20 characters', max_length=20)),
                ('sale_type', models.PositiveIntegerField(choices=[(1, 'SALE'), (2, 'RETURN')], default=1, help_text='where 1=Sale, 2=Return')),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Sub total can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if applicable, default=0.0 and max_value upto=100.00', max_digits=5)),
                ('total_discountable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discountable amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total taxable amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_non_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total nontaxable amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Total tax can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand total can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('pay_type', models.PositiveIntegerField(choices=[(1, 'CASH'), (2, 'CREDIT')], default=1, help_text='Pay type like 1 = CASH, 2 = CREDIT')),
                ('ref_by', models.CharField(blank=True, help_text='Ref by should be max. of 30 characters', max_length=30)),
                ('remarks', models.CharField(blank=True, help_text='Remarks should be max. of 100 characters and blank=True', max_length=100)),
                ('synced_with_ird', models.BooleanField(default=False)),
                ('is_real_time_upload', models.BooleanField(default=False)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, help_text='null =True', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer.customer')),
                ('discount_scheme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.discountscheme')),
                ('ref_order_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.ordermain')),
                ('ref_sale_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
                ('table', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rims_setup.table')),
            ],
            options={
                'verbose_name': 'historical sale main',
                'db_table': 'sale_salemain_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSaleDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, help_text='cost can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('qty', models.DecimalField(decimal_places=2, help_text='Purchase quantity can have max value upto=9999999999.99 and min_value=0.0', max_digits=12)),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is taxable')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if item is taxable, max_value=100.00 and default=0.0', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if item is discountable, max_value=100.00 and default=0.0', max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('gross_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Gross amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Net amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.item')),
                ('ref_order_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.orderdetail')),
                ('ref_purchase_detail', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasedetail')),
                ('ref_sale_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.saledetail')),
                ('sale_main', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
            ],
            options={
                'verbose_name': 'historical sale detail',
                'db_table': 'sale_saledetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogSaleAdditionalCharge',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('remarks', models.CharField(blank=True, max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('charge_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.additionalchargetype')),
                ('sale_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
            ],
            options={
                'verbose_name': 'historical sale additional charge',
                'db_table': 'sale_saleadditionalcharge_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchasePaymentDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount can have max value upto 9999999999.99 and min=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks can have max upto 50 characters', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('payment_mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.paymentmode')),
                ('purchase_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasemain')),
            ],
            options={
                'verbose_name': 'historical purchase payment detail',
                'db_table': 'purchase_purchasepaymentdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchaseOrderMain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('order_no', models.CharField(db_index=True, help_text='Order no. should be max. of 20 characters', max_length=20)),
                ('order_type', models.PositiveIntegerField(choices=[(1, 'ORDER'), (2, 'CANCELLED'), (3, 'APPROVED')], help_text='Order type like Order, approved, cancelled')),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Sub total can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if discountable, max_value=100.00 and default=0.0', max_digits=5)),
                ('total_discountable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discountable amount can have max_value upto=9999999999.99 and min value=0.0', max_digits=12)),
                ('total_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total taxable amount can have max value upto=9999999999.99 default=0.0', max_digits=12)),
                ('total_non_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total nontaxable amount can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Total tax can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand total can have max value upto=9999999999.99 and default=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks should be max. of 100 characters', max_length=100)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('discount_scheme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.discountscheme')),
                ('ref_purchase_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchaseordermain')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, help_text='Supplier', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier.supplier')),
            ],
            options={
                'verbose_name': 'historical purchase order main',
                'db_table': 'purchase_purchaseordermain_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchaseOrderDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('purchase_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('sale_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('qty', models.DecimalField(decimal_places=2, help_text='Order quantity', max_digits=12)),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is taxable')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if item is taxable', max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if item is discountable', max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.item')),
                ('item_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemcategory')),
                ('purchase_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchaseordermain')),
                ('ref_purchase_order_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchaseorderdetail')),
            ],
            options={
                'verbose_name': 'historical purchase order detail',
                'db_table': 'purchase_purchaseorderdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchaseMain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('purchase_no', models.CharField(db_index=True, help_text='Purchase no. should be max. of 10 characters', max_length=20)),
                ('purchase_type', models.PositiveIntegerField(choices=[(1, 'PURCHASE'), (2, 'RETURN'), (3, 'OPENING-STOCK'), (4, 'STOCK-ADDITION'), (5, 'STOCK-SUBTRACTION')], help_text='Purchase type like 1= Purchase, 2 = Return, 3 = Opening stock, 4 = stock-addition, 5 = stock-subtraction')),
                ('pay_type', models.PositiveIntegerField(choices=[(1, 'CASH'), (2, 'CREDIT'), (3, 'PARTIAL')], help_text='Pay type like CASH, CREDIT or PARTIAL')),
                ('sub_total', models.DecimalField(decimal_places=2, help_text='Sub total can be max upto 9999999999.99', max_digits=12)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount can be max upto 9999999999.99', max_digits=12)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if  discountable, default=0.0 and max_value=100.00', max_digits=5)),
                ('total_discountable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discountable amount can be max upto 9999999999.99', max_digits=12)),
                ('total_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total taxable amount can be max upto 9999999999.99', max_digits=12)),
                ('total_non_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total nontaxable amount can be max upto 9999999999.99', max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Total tax can be max upto 9999999999.99', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand total can be max upto 9999999999.99', max_digits=12)),
                ('bill_no', models.CharField(blank=True, help_text='Bill no.', max_length=20)),
                ('bill_date_ad', models.DateField(blank=True, help_text='Bill Date AD', max_length=10, null=True)),
                ('bill_date_bs', models.CharField(blank=True, help_text='Bill Date BS', max_length=10)),
                ('chalan_no', models.CharField(blank=True, help_text='Chalan no.', max_length=15)),
                ('due_date_ad', models.DateField(blank=True, help_text='Due Date AD', max_length=10, null=True)),
                ('due_date_bs', models.CharField(blank=True, help_text='Due Date BS', max_length=10)),
                ('remarks', models.CharField(blank=True, help_text='Remarks can be max. of 100 characters', max_length=100)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('discount_scheme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.discountscheme')),
                ('ref_purchase', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasemain')),
                ('ref_purchase_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchaseordermain')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, help_text='Supplier', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier.supplier')),
            ],
            options={
                'verbose_name': 'historical purchase main',
                'db_table': 'purchase_purchasemain_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchaseDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('purchase_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='purchase_cost can be max value upto 9999999999.99 and default=0.0', max_digits=12)),
                ('sale_cost', models.DecimalField(decimal_places=2, help_text='sale_cost can be max value upto 9999999999.99 and default=0.0', max_digits=12)),
                ('qty', models.DecimalField(decimal_places=2, help_text='Purchase quantity can be max value upto 9999999999.99 and default=0.0', max_digits=12)),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is taxable')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if item is taxable, max value=100.00 and default=0.0', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount can be max value upto 9999999999.99 and default=0.0', max_digits=12)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable')),
                ('expirable', models.BooleanField(default=False, help_text='Check if item is Expirable, default=False')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if item is discountable, default=0.0 and max_value=100.00', max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount_amount can be max upto 9999999999.99 and default=0.0', max_digits=12)),
                ('gross_amount', models.DecimalField(decimal_places=2, help_text='Gross amount can be max upto 9999999999.99 and default=0.0', max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Net amount can be max upto 9999999999.99 and default=0.0', max_digits=12)),
                ('expiry_date_ad', models.DateField(blank=True, help_text='Expiry Date AD', max_length=10, null=True)),
                ('expiry_date_bs', models.CharField(blank=True, help_text='Expiry Date BS', max_length=10)),
                ('batch_no', models.CharField(help_text='Batch no. max length 20', max_length=20)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.item')),
                ('item_category', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemcategory')),
                ('purchase', models.ForeignKey(blank=True, db_constraint=False, default=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasemain')),
                ('ref_purchase_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasedetail')),
                ('ref_purchase_order_detail', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchaseorderdetail')),
            ],
            options={
                'verbose_name': 'historical purchase detail',
                'db_table': 'purchase_purchasedetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPurchaseAdditionalCharge',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount can have max value upto 9999999999.99 and min=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks can have max upto 50 characters', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('charge_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.additionalchargetype')),
                ('purchase_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasemain')),
            ],
            options={
                'verbose_name': 'historical purchase additional charge',
                'db_table': 'purchase_purchaseadditionalcharge_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPartyPaymentDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Maximum value 9999999999.99, min_value=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Max upto 50 characters, blank=True', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('party_clearance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party_payment.partyclearance')),
                ('payment_mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.paymentmode')),
            ],
            options={
                'verbose_name': 'historical party payment detail',
                'db_table': 'party_payment_partypaymentdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogPartyClearance',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('payment_type', models.PositiveIntegerField(choices=[(1, 'PAYMENT'), (2, 'REFUND')], default=0, help_text='Where 1 = PAYMENT, 2 = REFUND')),
                ('receipt_no', models.CharField(help_text='Receipt no can have max of 20 characters', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='max_value upto 9999999999.99 and min_vale=0.0', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='Remarks can be max upto 50 characters, blank=True', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('purchase_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='purchase.purchasemain')),
                ('ref_party_clearance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party_payment.partyclearance')),
            ],
            options={
                'verbose_name': 'historical party clearance',
                'db_table': 'party_payment_partyclearance_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogOrganizationSetup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='Organization name should be maximum of 100 characters', max_length=100)),
                ('address', models.CharField(blank=True, db_index=True, help_text='Organization name should be maximum of 100 characters', max_length=100)),
                ('phone_no_1', models.CharField(blank=True, db_index=True, help_text='Phone no should be maximum of 15 characters', max_length=15)),
                ('phone_no_2', models.CharField(blank=True, help_text='Phone no should be maximum of 15 characters', max_length=15)),
                ('mobile_no', models.CharField(blank=True, db_index=True, help_text='Mobile no should be maximum of 15 characters', max_length=15)),
                ('pan_no', models.CharField(blank=True, db_index=True, help_text='PAN no. should be maximum of 15 characters', max_length=15)),
                ('owner_name', models.CharField(blank=True, db_index=True, help_text='Owner name should be maximum of 50 characters', max_length=50)),
                ('email', models.CharField(blank=True, db_index=True, help_text='Email Id. should be maximum of 70 characters', max_length=70)),
                ('website_url', models.CharField(blank=True, db_index=True, help_text='Website address should be maximum of 50 characters', max_length=50)),
                ('logo', models.TextField(blank=True, max_length=100, validators=[src.core_app.models.validate_image])),
                ('favicon', models.TextField(blank=True, max_length=100, validators=[src.core_app.models.validate_image])),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.country')),
            ],
            options={
                'verbose_name': 'historical organization setup',
                'db_table': 'core_app_organizationsetup_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogOrderMain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('order_no', models.CharField(db_index=True, help_text='Order Id should be max. of 10 characters', max_length=20)),
                ('order_type', models.PositiveIntegerField(choices=[(1, 'ON-TABLE'), (2, 'TAKE-AWAY'), (3, 'ONLINE')], default=1, help_text='Where 1 = ON-TABLE, 2=TAKE-AWAY, 3 = ONLINE')),
                ('status', models.PositiveIntegerField(choices=[(1, 'PENDING'), (2, 'BILLED'), (3, 'CANCELLED')], default=1, help_text='Where 1 = PENDING,2=BILLED, 3 = CANCELLED')),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount', max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, help_text='Total tax', max_digits=12)),
                ('total_discountable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discountable amount', max_digits=12)),
                ('total_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total taxable amount', max_digits=12)),
                ('total_non_taxable_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total nontaxable amount', max_digits=12)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Sub total', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand total', max_digits=12)),
                ('delivery_date_ad', models.DateField(blank=True, help_text='Bill Date AD', max_length=10, null=True)),
                ('delivery_date_bs', models.CharField(blank=True, help_text='Bill Date BS', max_length=10)),
                ('delivery_location', models.CharField(blank=True, help_text='Location should be max. of 100 characters', max_length=100)),
                ('remarks', models.CharField(blank=True, help_text='Remarks should be max. of 100 characters', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer.customer')),
                ('discount_scheme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.discountscheme')),
                ('table', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='rims_setup.table')),
            ],
            options={
                'verbose_name': 'historical order main',
                'db_table': 'customer_order_ordermain_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogOrderDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('qty', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sale_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='sale cost of order default=0.00', max_digits=12)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable default=True')),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is discountable default=True')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if food is taxable', max_digits=19)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount rate if food is taxable', max_digits=19)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('gross_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('cancelled', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.item')),
                ('order_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.ordermain')),
            ],
            options={
                'verbose_name': 'historical order detail',
                'db_table': 'customer_order_orderdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogItemSubCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('code', models.CharField(blank=True, db_index=True, help_text='Item code can be max. of 10 characters', max_length=10)),
                ('display_order', models.IntegerField(default=0, help_text='Display order for ordering, default=0')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemcategory')),
            ],
            options={
                'verbose_name': 'historical item sub category',
                'db_table': 'item_itemsubcategory_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('code', models.CharField(blank=True, db_index=True, help_text='Item code should be max. of 10 characters', max_length=10)),
                ('item_type', models.PositiveIntegerField(choices=[(1, 'INVENTORY'), (2, 'SALE'), (3, 'BOTH')], help_text='Item type like 1=INVENTORY, 2=SALE, 3=BOTH')),
                ('stock_alert_qty', models.IntegerField(default=1, help_text='Quantity for alert/warning')),
                ('location', models.CharField(help_text='Physical location of item, max length can be of 10 characters', max_length=10)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('taxable', models.BooleanField(default=True, help_text='Check if item is taxable, default=True')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate if item is taxable, default=0.0 and can be upto 100.00', max_digits=5)),
                ('discountable', models.BooleanField(default=True, help_text='Check if item is discountable, default=True')),
                ('expirable', models.BooleanField(default=True, help_text='Check if item is expirable, default=True')),
                ('purchase_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Max value purchase_cost can be upto 9999999999.99', max_digits=12)),
                ('sale_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Max value sale_cost can be upto 9999999999.99', max_digits=12)),
                ('recipe', models.CharField(blank=True, max_length=250)),
                ('image', models.TextField(blank=True, max_length=100, validators=[src.item.models.validate_image])),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('item_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemcategory')),
                ('item_sub_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='item.itemsubcategory')),
            ],
            options={
                'verbose_name': 'historical item',
                'db_table': 'item_item_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogDistrict',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(db_index=True, help_text='District name can be max. of 50 characters and unique=True', max_length=50)),
                ('active', models.BooleanField(default=True, help_text='by default=True')),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.province')),
            ],
            options={
                'verbose_name': 'historical district',
                'db_table': 'core_app_district_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogCustomer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(help_text='First name should be max. of 40 characters', max_length=40)),
                ('middle_name', models.CharField(blank=True, help_text='Middle name should be max. of 40 characters', max_length=40)),
                ('last_name', models.CharField(help_text='Last name should be max. of 40 characters', max_length=40)),
                ('address', models.CharField(help_text='Address should be max. of 50 characters', max_length=50)),
                ('phone_no', models.CharField(blank=True, help_text='Phone no. should be max. of 15 characters', max_length=15)),
                ('mobile_no', models.CharField(blank=True, help_text='mobile no. should be max. of 15 characters', max_length=15)),
                ('email_id', models.CharField(blank=True, help_text='Email Id should be max. of 50 characters', max_length=50)),
                ('pan_vat_no', models.CharField(blank=True, help_text='PAN/VAT should be max. of 15 characters', max_length=9)),
                ('tax_reg_system', models.PositiveIntegerField(choices=[(1, 'VAT'), (2, 'PAN')], default=1, help_text='default value is 1')),
                ('image', models.TextField(blank=True, help_text='max image size should be 2 MB', max_length=100, validators=[src.customer.models.validate_image])),
                ('active', models.BooleanField(default=True)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.country')),
            ],
            options={
                'verbose_name': 'historical customer',
                'db_table': 'customer_customer_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogBankDeposit',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('deposit_date_ad', models.DateTimeField()),
                ('deposit_date_bs', models.CharField(blank=True, max_length=10)),
                ('deposit_by', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, help_text='User can input value upto 99999999.99', max_digits=12)),
                ('remarks', models.CharField(max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bank', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.bank')),
            ],
            options={
                'verbose_name': 'historical bank deposit',
                'db_table': 'core_app_bankdeposit_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogAdvanceDepositPaymentDetail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Maximum value upto 99999999999.99', max_digits=12)),
                ('remarks', models.CharField(blank=True, help_text='remarks can be upto 50 characters', max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('advance_deposit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='advance_deposit.advancedeposit')),
                ('payment_mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core_app.paymentmode')),
            ],
            options={
                'verbose_name': 'historical advance deposit payment detail',
                'db_table': 'advance_deposit_advancedepositpaymentdetail_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LogAdvanceDeposit',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_date_bs', models.CharField(blank=True, max_length=10, null=True)),
                ('advance_deposit_type', models.PositiveIntegerField(choices=[(1, 'DEPOSIT'), (2, 'DEPOSIT-RETURN')], help_text='Advance Deposit type like 1= Deposit, 2 = Return')),
                ('deposit_no', models.CharField(help_text='max deposit_no should not be greater than 13', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Maximum value upto 99999999999.99', max_digits=12)),
                ('remarks', models.CharField(blank=True, max_length=50)),
                ('history_user_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('order_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer_order.ordermain')),
                ('sale_main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sale.salemain')),
            ],
            options={
                'verbose_name': 'historical advance deposit',
                'db_table': 'advance_deposit_advancedeposit_log',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
